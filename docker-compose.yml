version: '3'
services:
  postgres0:
    image: postgres
    container_name: postgres0
    volumes:
      - "$PWD/postgres:/docker-entrypoint-initdb.d"
    expose: 
      - 5431
    ports:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ricette   
  postgres1:
    image: postgres
    container_name: postgres1
    volumes:
      - "$PWD/postgres1:/docker-entrypoint-initdb.d"
    expose: 
      - 5432
    ports:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: connessioni
  postgres2:
    image: postgres
    container_name: postgres2
    volumes:
      - "$PWD/postgres2:/docker-entrypoint-initdb.d"
    expose: 
      - 5430
    ports:
      - "5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ricetteseguite    
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP:-10.11.1.121}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "asw.instagnam.channel.ricettaCreatedEvent:1:1,asw.instagnam.channel.connessioneCreatedEvent:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  consul:
    image: consul
  ricette:
    build: ./ricette
    image: ricette-service
    depends_on:
      - consul
      - postgres0
  connessioni:
    build: ./connessioni
    image: connessioni-service
    depends_on:
      - consul
      - postgres1
  ricette-seguite:
    build: ./ricette-seguite
    image: ricette-seguite-service
    depends_on:
      - consul
      - postgres2
  apigateway:
    build: ./api-gateway
    image: api-gateway-service
    ports:
    - "8080:8080"
    depends_on:
      - consul
